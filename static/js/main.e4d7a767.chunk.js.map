{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","followers","views","likes","className","s","Description","src","alt","Avatar","Name","Tag","Location","Stats","UserStats","Label","Quantity","Statistics","title","randomColor","Math","floor","random","Title","StatList","map","stat","Item","style","backgroundColor","label","Percentage","percentage","id","propType","PropTypes","string","arrayOf","shape","isRequired","number","FriendListItem","isOnline","Online","Status","width","bool","FriendList","friends","friend","TransactionHistory","items","item","HistoryRow","History","type","slice","toUpperCase","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e4d7a767.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2d6Kp\",\"Description\":\"Profile_Description__2Y-gi\",\"Avatar\":\"Profile_Avatar__M_DH4\",\"Stats\":\"Profile_Stats___oWNY\",\"UserStats\":\"Profile_UserStats__1sV34\",\"Label\":\"Profile_Label__1k5De\",\"Quantity\":\"Profile_Quantity__2u5f9\",\"Name\":\"Profile_Name__apJRa\",\"Tag\":\"Profile_Tag__3BPL0\",\"Location\":\"Profile_Location__MbA7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__2-Whv\",\"Title\":\"TransactionHistory_Title__2OgaT\",\"History\":\"TransactionHistory_History__-v8iF\",\"HistoryRow\":\"TransactionHistory_HistoryRow__1PAE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendList\":\"FriendList_FriendList__7OcSi\",\"Status\":\"FriendList_Status__1lcvk\",\"Online\":\"FriendList_Online__3C6em\",\"Item\":\"FriendList_Item__2ZEtg\",\"Avatar\":\"FriendList_Avatar__1YVN1\",\"Name\":\"FriendList_Name__29Yzm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__2fEdB\",\"Title\":\"Statistics_Title__2BUk7\",\"StatList\":\"Statistics_StatList__kcfxt\",\"Item\":\"Statistics_Item___orwV\",\"Label\":\"Statistics_Label__1UwRv\",\"Percentage\":\"Statistics_Percentage__jvs3b\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nconst Profile = ({ avatar, name, tag, location, stats }) => {\n  \n  const { followers, views, likes } = stats;\n  \n  return (\n    <div className={s.Profile}>\n      <div className={s.Description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.Avatar} />\n        <p className={s.Name}>{name}</p>\n        <p className={s.Tag}>@{tag}</p>\n        <p className={s.Location}>{location}</p>\n      </div>\n\n      <ul className={s.Stats}>     \n        <li className={s.UserStats}>\n          <span className={s.Label}>Followers</span>\n          <span className={s.Quantity}>{followers}</span>\n        </li>\n        <li className={s.UserStats}>\n          <span className={s.Label}>Views</span>\n          <span className={s.Quantity}>{views}</span>\n        </li>\n        <li className={s.UserStats}>\n          <span className={s.Label}>Likes</span>\n          <span className={s.Quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }).isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ title, stats }) => {\n  const randomColor = () => Math.floor(Math.random() * 256);\n  const randonRGB = () => `rgb(${randomColor()},${randomColor()},${randomColor()})`;\n  \n  return (\n    <section className={s.Statistics}>\n      {title && <h2 className={s.Title}>{title}</h2>}\n\n      <ul className={s.StatList}>\n        {stats.map(stat => (\n          <li className={s.Item} style={{backgroundColor: randonRGB()}}key={stat.id}>\n            <span className={s.Label}>{stat.label}</span>\n            <span className={s.Percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propType = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n    return (\r\n        <>\r\n            <span className={isOnline ? s.Online : s.Status}>{isOnline}</span>\r\n            <img className={s.Avatar} src={avatar} alt=\"\" width=\"48\" />\r\n            <p className={s.Name}>{name}</p>\r\n      </>\r\n    );\r\n}\r\n\r\nFriendListItem.propType = {\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.bool.isRequired,\r\n      isOnline: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n    ","import FriendListItem from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.FriendList}>\n      {friends.map(friend => (\n        <li className={s.Item} key={friend.id}>\n          <FriendListItem\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={ friend.isOnline}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propType = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,  \n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.TransactionHistory}>\n      <thead>\n        <tr>\n          <th className={s.Title}>Type</th>\n          <th className={s.Title}>Amount</th>\n          <th className={s.Title}>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr className={ s.HistoryRow} key={item.id}>\n            <td className={s.History}>{item.type.slice(0, 1).toUpperCase() + item.type.slice(1)}</td>\n            <td className={s.History}>{item.amount}</td>\n            <td className={s.History}>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propType = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport user from './data/user.json';\n//import Section from './components/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './data/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}